name: Build OTP JInterface with Multiple JDKs

on:
  workflow_dispatch: 
  schedule:
    - cron: '0 0 1 * *'

permissions:
  contents: write
  
jobs:
  prepare:
    runs-on: ubuntu-latest
    steps:
      - name: Clone OTP repository
        run: |
          git clone https://github.com/erlang/otp.git
          cd otp
          git fetch origin maint-27:maint-27 maint-26:maint-26 maint-25:maint-25

      - name: Cache OTP repository
        uses: actions/cache/save@v4
        with:
          path: |
            otp
          key: otp-repo-${{ github.run_id }}

  build-and-release:
    needs: prepare
    runs-on: ubuntu-latest
    outputs:
      matrix-info: ${{ steps.set-matrix-info.outputs.matrix-info }}
    strategy:
      matrix:
        branch: ['maint-27', 'maint-26', 'maint-25']
        java-version: ['21']
        include:
          - branch: maint-27
            branch_suffix: otp27
          - branch: maint-26
            branch_suffix: otp26
          - branch: maint-25
            branch_suffix: otp25
    
    steps:
      - name: Checkout current repository
        uses: actions/checkout@v4
        
      - name: Install build dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential autoconf automake libtool
        
      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          java-version: ${{ matrix.java-version }}
          distribution: 'temurin'

      - name: Restore cached OTP repository
        uses: actions/cache/restore@v4
        with:
          path: |
            otp
          key: otp-repo-${{ github.run_id }}
          fail-on-cache-miss: true
          
      - name: Build project
        run: |
          cd otp
          git checkout ${{ matrix.branch }}
          chmod +x ./configure
          ./configure JAVA_HOME=$JAVA_HOME
          make
          sudo make install
          
      - name: Locate and copy JAR file
        id: locate_jar
        run: |
          JINTERFACE_PATH=$(erl -noshell -eval 'io:format("~s", [code:priv_dir(jinterface)])' -s init stop)
          echo "Jinterface path: $JINTERFACE_PATH"
          
          VERSION=$(echo $JINTERFACE_PATH | grep -oP 'jinterface-\K[0-9.]+')
          echo "Found version: $VERSION"
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          
          JAR_FILE="OtpErlang-${{ matrix.branch_suffix }}-java${{ matrix.java-version }}-$VERSION.jar"
          sudo cp "$JINTERFACE_PATH/OtpErlang.jar" "./$JAR_FILE"
          sudo chown runner:runner "./$JAR_FILE"
          
          # Calculate SHA256
          SHA256=$(sha256sum "./$JAR_FILE" | cut -d' ' -f1)
          echo "sha256=$SHA256" >> $GITHUB_OUTPUT
          echo "jar_file=$JAR_FILE" >> $GITHUB_OUTPUT
          
      - name: Create and upload release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          echo "OtpErlang.jar version ${{ steps.locate_jar.outputs.version }}" > release_notes.md
          echo "Build with:" >> release_notes.md
          echo "- OTP Branch: ${{ matrix.branch }}" >> release_notes.md
          echo "- Java Version: ${{ matrix.java-version }}" >> release_notes.md
          echo "- SHA256: ${{ steps.locate_jar.outputs.sha256 }}" >> release_notes.md
          
          gh release create \
            "v${{ steps.locate_jar.outputs.version }}-${{ matrix.branch_suffix }}-java${{ matrix.java-version }}" \
            "./${{ steps.locate_jar.outputs.jar_file }}" \
            --title "OtpErlang v${{ steps.locate_jar.outputs.version }} (${{ matrix.branch }} - Java ${{ matrix.java-version }})" \
            --notes-file release_notes.md

      - name: Save build info
        id: set-matrix-info
        run: |
          # Create or append to JSON array file
          if [ ! -f build_info_array.json ]; then
            echo "[]" > build_info_array.json
          fi
          
          # Add current build info to array
          jq --arg v "${{ steps.locate_jar.outputs.version }}" \
             --arg bs "${{ matrix.branch_suffix }}" \
             --arg jv "${{ matrix.java-version }}" \
             --arg sh "${{ steps.locate_jar.outputs.sha256 }}" \
             '. += [{"version": $v, "branch_suffix": $bs, "java_version": $jv, "sha256": $sh}]' \
             build_info_array.json > tmp.json && mv tmp.json build_info_array.json
          
          # Set output to entire array
          echo "matrix-info=$(cat build_info_array.json)" >> $GITHUB_OUTPUT

      - name: Upload build info
        uses: actions/upload-artifact@v4
        with:
          name: build-info
          path: build_info_array.json

  update-readme:
    needs: build-and-release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Download build info
        uses: actions/download-artifact@v4
        with:
          name: build-info

      - name: Update README
        run: |
          # Create a temporary file for the new README content
          cat > README.new.md << 'EOL'
          # Jinterface-build

          Action that builds the Jinterface / OtpErlang jar file for OTP 27, OTP 26, OTP 25, with JDK 21, since the Jinterface version on Maven is more than outdated.

          See the [RELEASES](https://github.com/alzo-archi/jinterface-build/releases) to get the build corresponding to your OTP version.
          Use it in your Java project with :

          ```sh
          mvn install:install-file \
              -Dfile=./OtpErlang-VERSION.jar \
              -DgroupId=org.ericsson.otp \
              -DartifactId=jinterface \
              -Dversion=VERSION \
              -Dpackaging=jar \
              -DgeneratePom=true
          ```

          |OTP Version|Jinterface Version|URL|SHA256|
          |---|---|---|---|
          EOL

          # Sort the JSON array by branch_suffix in descending order and process each entry
          jq -c 'sort_by(.branch_suffix) | reverse | .[]' build_info_array.json | while read -r info; do
            version=$(echo "$info" | jq -r '.version')
            branch_suffix=$(echo "$info" | jq -r '.branch_suffix')
            java_version=$(echo "$info" | jq -r '.java_version')
            sha256=$(echo "$info" | jq -r '.sha256')
            otp_version="${branch_suffix#"otp"}"
            
            jar_name="OtpErlang-${branch_suffix}-java${java_version}-${version}.jar"
            url="https://github.com/alzo-archi/jinterface-build/releases/download/v${version}-${branch_suffix}-java${java_version}/${jar_name}"
            
            echo "|${otp_version}|${version}|${url}|${sha256}|" >> README.new.md
          done

          # Replace the old README with the new one
          mv README.new.md README.md

      - name: Commit and push changes
        run: |
          git config --local user.email "github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"
          git add README.md
          git commit -m "Update README with latest build information [skip ci]"
          git push
